// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkOrderDemo.Api.Infrastructure.Persistence.Context;

#nullable disable

namespace WorkOrderDemo.Api.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(WorkOrderDbContext))]
    partial class WorkOrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.VisitAggregate.Visit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VisitorName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("WorkOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Visit", "ordering");
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.VisitAggregate.VisitPart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitPart", "ordering");
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.WorkOrderAggregate.WorkOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("OrderingCompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("orderImportanceId")
                        .HasColumnType("int")
                        .HasColumnName("OrderImportanceId");

                    b.Property<int>("orderStatusId")
                        .HasColumnType("int")
                        .HasColumnName("OrderStatusId");

                    b.HasKey("Id");

                    b.HasIndex("orderImportanceId");

                    b.HasIndex("orderStatusId");

                    b.ToTable("WorkOrder", "ordering");
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.WorkOrderAggregate.WorkOrderImportance", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("WorkOrderImportance", "ordering");
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.WorkOrderAggregate.WorkOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("WorkOrderStatus", "ordering");
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.VisitAggregate.Visit", b =>
                {
                    b.HasOne("WorkOrderDemo.Api.Domain.AggregateModels.WorkOrderAggregate.WorkOrder", "WorkOrder")
                        .WithMany("Visits")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.VisitAggregate.VisitPart", b =>
                {
                    b.HasOne("WorkOrderDemo.Api.Domain.AggregateModels.VisitAggregate.Visit", null)
                        .WithMany("VisitParts")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.WorkOrderAggregate.WorkOrder", b =>
                {
                    b.HasOne("WorkOrderDemo.Api.Domain.AggregateModels.WorkOrderAggregate.WorkOrderImportance", "OrderImportance")
                        .WithMany()
                        .HasForeignKey("orderImportanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkOrderDemo.Api.Domain.AggregateModels.WorkOrderAggregate.WorkOrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("orderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderImportance");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.VisitAggregate.Visit", b =>
                {
                    b.Navigation("VisitParts");
                });

            modelBuilder.Entity("WorkOrderDemo.Api.Domain.AggregateModels.WorkOrderAggregate.WorkOrder", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
